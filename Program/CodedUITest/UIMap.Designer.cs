// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITest
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Start program, choose bike details and click next
        /// </summary>
        public void choose_bike_details()
        {
            #region Variable Declarations
            WpfWindow uIWpfWindow = this.UIWpfWindow;
            WpfListItem uITypeAListItem = this.UIMainWindowWindow.UITypeAListItem;
            WpfListItem uITypeBListItem = this.UIMainWindowWindow.UITypeBListItem;
            WpfComboBox uIBrakesComboBox = this.UIMainWindowWindow.UIBrakesComboBox;
            WpfComboBox uISaddleComboBox = this.UIMainWindowWindow.UISaddleComboBox;
            #endregion

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(326, 141));

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(337, 190));

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(297, 240));

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(302, 304));

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(308, 345));

            // Click 'Type A' list item
            Mouse.Click(uITypeAListItem, new Point(103, 7));

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(318, 420));

            // Click 'Type B' list item
            Mouse.Click(uITypeBListItem, new Point(116, 12));

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(587, 370));

            // Select 'Type A' in 'brakes' combo box
            uIBrakesComboBox.SelectedItem = this.choose_bike_detailsParams.UIBrakesComboBoxSelectedItem;

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(585, 418));

            // Select 'Type B' in 'saddle' combo box
            uISaddleComboBox.SelectedItem = this.choose_bike_detailsParams.UISaddleComboBoxSelectedItem;

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(300, 488));

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(692, 498));
        }
        
        /// <summary>
        /// View order & click next, Enter customer details & click next
        /// </summary>
        public void viewOrder_enterCustomerDetails()
        {
            #region Variable Declarations
            WpfWindow uIWpfWindow = this.UIWpfWindow;
            WpfEdit uINameEdit = this.UICustomer_DetailsWindow.UINameEdit;
            WpfEdit uIAddressEdit = this.UICustomer_DetailsWindow.UIAddressEdit;
            WpfEdit uIEmailEdit = this.UICustomer_DetailsWindow.UIEmailEdit;
            WpfEdit uIPostcodeEdit = this.UICustomer_DetailsWindow.UIPostcodeEdit;
            #endregion

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(621, 407));

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(299, 230));

            // Type 'Maria' in 'name' text box
            uINameEdit.Text = this.viewOrder_enterCustomerDetailsParams.UINameEditText;

            // Type '{Tab}' in 'name' text box
            Keyboard.SendKeys(uINameEdit, this.viewOrder_enterCustomerDetailsParams.UINameEditSendKeys, ModifierKeys.None);

            // Type 'EN' in 'address' text box
            uIAddressEdit.Text = this.viewOrder_enterCustomerDetailsParams.UIAddressEditText;

            // The control is not available or not valid.

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(299, 324));

            // Type 'maria@napier.com' in 'email' text box
            uIEmailEdit.Text = this.viewOrder_enterCustomerDetailsParams.UIEmailEditText;

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(518, 292));

            // Type 'EH11 1FA' in 'postcode' text box
            uIPostcodeEdit.Text = this.viewOrder_enterCustomerDetailsParams.UIPostcodeEditText;

            // Type '{CapsLock}' in 'postcode' text box
            Keyboard.SendKeys(uIPostcodeEdit, this.viewOrder_enterCustomerDetailsParams.UIPostcodeEditSendKeys, ModifierKeys.None);

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(334, 397));

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(569, 402));
        }
        
        /// <summary>
        /// View payment details, pay deposit, view receipt and choose to buy a second bike
        /// </summary>
        public void payDeposit_viewReceipt_addBike()
        {
            #region Variable Declarations
            WpfWindow uIWpfWindow = this.UIWpfWindow;
            WpfEdit uICardnumberEdit = this.UIPaymentWindow.UICardnumberEdit;
            WinButton uIOKButton = this.UIOKWindow.UIOKButton;
            WinButton uICloseButton = this.UIReceiptWindow.UICloseButton;
            WinButton uICloseButton1 = this.UIMainWindowWindow1.UICloseButton;
            #endregion

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(331, 153));

            // The control is not available or not valid.

            // Type '1234' in 'cardnumber' text box
            uICardnumberEdit.Text = this.payDeposit_viewReceipt_addBikeParams.UICardnumberEditText;

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(498, 141));

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(507, 241));

            // Type '{Enter}' in 'OK' button
            Keyboard.SendKeys(uIOKButton, this.payDeposit_viewReceipt_addBikeParams.UIOKButtonSendKeys, ModifierKeys.None);

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(39, 37));

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(545, 401));

            // Click 'Close' button
            Mouse.Click(uICloseButton1, new Point(41, 25));
        }
        
        #region Properties
        public virtual choose_bike_detailsParams choose_bike_detailsParams
        {
            get
            {
                if ((this.mchoose_bike_detailsParams == null))
                {
                    this.mchoose_bike_detailsParams = new choose_bike_detailsParams();
                }
                return this.mchoose_bike_detailsParams;
            }
        }
        
        public virtual viewOrder_enterCustomerDetailsParams viewOrder_enterCustomerDetailsParams
        {
            get
            {
                if ((this.mviewOrder_enterCustomerDetailsParams == null))
                {
                    this.mviewOrder_enterCustomerDetailsParams = new viewOrder_enterCustomerDetailsParams();
                }
                return this.mviewOrder_enterCustomerDetailsParams;
            }
        }
        
        public virtual payDeposit_viewReceipt_addBikeParams payDeposit_viewReceipt_addBikeParams
        {
            get
            {
                if ((this.mpayDeposit_viewReceipt_addBikeParams == null))
                {
                    this.mpayDeposit_viewReceipt_addBikeParams = new payDeposit_viewReceipt_addBikeParams();
                }
                return this.mpayDeposit_viewReceipt_addBikeParams;
            }
        }
        
        public UIWpfWindow UIWpfWindow
        {
            get
            {
                if ((this.mUIWpfWindow == null))
                {
                    this.mUIWpfWindow = new UIWpfWindow();
                }
                return this.mUIWpfWindow;
            }
        }
        
        public UIMainWindowWindow UIMainWindowWindow
        {
            get
            {
                if ((this.mUIMainWindowWindow == null))
                {
                    this.mUIMainWindowWindow = new UIMainWindowWindow();
                }
                return this.mUIMainWindowWindow;
            }
        }
        
        public UICustomer_DetailsWindow UICustomer_DetailsWindow
        {
            get
            {
                if ((this.mUICustomer_DetailsWindow == null))
                {
                    this.mUICustomer_DetailsWindow = new UICustomer_DetailsWindow();
                }
                return this.mUICustomer_DetailsWindow;
            }
        }
        
        public UIPaymentWindow UIPaymentWindow
        {
            get
            {
                if ((this.mUIPaymentWindow == null))
                {
                    this.mUIPaymentWindow = new UIPaymentWindow();
                }
                return this.mUIPaymentWindow;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow();
                }
                return this.mUIOKWindow;
            }
        }
        
        public UIReceiptWindow UIReceiptWindow
        {
            get
            {
                if ((this.mUIReceiptWindow == null))
                {
                    this.mUIReceiptWindow = new UIReceiptWindow();
                }
                return this.mUIReceiptWindow;
            }
        }
        
        public UIMainWindowWindow1 UIMainWindowWindow1
        {
            get
            {
                if ((this.mUIMainWindowWindow1 == null))
                {
                    this.mUIMainWindowWindow1 = new UIMainWindowWindow1();
                }
                return this.mUIMainWindowWindow1;
            }
        }
        #endregion
        
        #region Fields
        private choose_bike_detailsParams mchoose_bike_detailsParams;
        
        private viewOrder_enterCustomerDetailsParams mviewOrder_enterCustomerDetailsParams;
        
        private payDeposit_viewReceipt_addBikeParams mpayDeposit_viewReceipt_addBikeParams;
        
        private UIWpfWindow mUIWpfWindow;
        
        private UIMainWindowWindow mUIMainWindowWindow;
        
        private UICustomer_DetailsWindow mUICustomer_DetailsWindow;
        
        private UIPaymentWindow mUIPaymentWindow;
        
        private UIOKWindow mUIOKWindow;
        
        private UIReceiptWindow mUIReceiptWindow;
        
        private UIMainWindowWindow1 mUIMainWindowWindow1;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'choose_bike_details'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class choose_bike_detailsParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Type A' in 'brakes' combo box
        /// </summary>
        public string UIBrakesComboBoxSelectedItem = "Type A";
        
        /// <summary>
        /// Select 'Type B' in 'saddle' combo box
        /// </summary>
        public string UISaddleComboBoxSelectedItem = "Type B";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'viewOrder_enterCustomerDetails'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class viewOrder_enterCustomerDetailsParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Maria' in 'name' text box
        /// </summary>
        public string UINameEditText = "Maria";
        
        /// <summary>
        /// Type '{Tab}' in 'name' text box
        /// </summary>
        public string UINameEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'EN' in 'address' text box
        /// </summary>
        public string UIAddressEditText = "EN";
        
        /// <summary>
        /// Type 'maria@napier.com' in 'email' text box
        /// </summary>
        public string UIEmailEditText = "maria@napier.com";
        
        /// <summary>
        /// Type 'EH11 1FA' in 'postcode' text box
        /// </summary>
        public string UIPostcodeEditText = "EH11 1FA";
        
        /// <summary>
        /// Type '{CapsLock}' in 'postcode' text box
        /// </summary>
        public string UIPostcodeEditSendKeys = "{CapsLock}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'payDeposit_viewReceipt_addBike'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class payDeposit_viewReceipt_addBikeParams
    {
        
        #region Fields
        /// <summary>
        /// Type '1234' in 'cardnumber' text box
        /// </summary>
        public string UICardnumberEditText = "1234";
        
        /// <summary>
        /// Type '{Enter}' in 'OK' button
        /// </summary>
        public string UIOKButtonSendKeys = "{Enter}";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIWpfWindow : WpfWindow
    {
        
        public UIWpfWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            #endregion
        }
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMainWindowWindow : WpfWindow
    {
        
        public UIMainWindowWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "MainWindow";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfListItem UITypeAListItem
        {
            get
            {
                if ((this.mUITypeAListItem == null))
                {
                    this.mUITypeAListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUITypeAListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Type A";
                    this.mUITypeAListItem.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUITypeAListItem;
            }
        }
        
        public WpfListItem UITypeBListItem
        {
            get
            {
                if ((this.mUITypeBListItem == null))
                {
                    this.mUITypeBListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUITypeBListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Type B";
                    this.mUITypeBListItem.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUITypeBListItem;
            }
        }
        
        public WpfComboBox UIBrakesComboBox
        {
            get
            {
                if ((this.mUIBrakesComboBox == null))
                {
                    this.mUIBrakesComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUIBrakesComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "brakes";
                    this.mUIBrakesComboBox.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIBrakesComboBox;
            }
        }
        
        public WpfComboBox UISaddleComboBox
        {
            get
            {
                if ((this.mUISaddleComboBox == null))
                {
                    this.mUISaddleComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUISaddleComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "saddle";
                    this.mUISaddleComboBox.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUISaddleComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mUITypeAListItem;
        
        private WpfListItem mUITypeBListItem;
        
        private WpfComboBox mUIBrakesComboBox;
        
        private WpfComboBox mUISaddleComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICustomer_DetailsWindow : WpfWindow
    {
        
        public UICustomer_DetailsWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Customer_Details";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Customer_Details");
            #endregion
        }
        
        #region Properties
        public WpfEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "name";
                    this.mUINameEdit.WindowTitles.Add("Customer_Details");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        
        public WpfEdit UIAddressEdit
        {
            get
            {
                if ((this.mUIAddressEdit == null))
                {
                    this.mUIAddressEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIAddressEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "address";
                    this.mUIAddressEdit.WindowTitles.Add("Customer_Details");
                    #endregion
                }
                return this.mUIAddressEdit;
            }
        }
        
        public WpfEdit UIEmailEdit
        {
            get
            {
                if ((this.mUIEmailEdit == null))
                {
                    this.mUIEmailEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIEmailEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "email";
                    this.mUIEmailEdit.WindowTitles.Add("Customer_Details");
                    #endregion
                }
                return this.mUIEmailEdit;
            }
        }
        
        public WpfEdit UIPostcodeEdit
        {
            get
            {
                if ((this.mUIPostcodeEdit == null))
                {
                    this.mUIPostcodeEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIPostcodeEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "postcode";
                    this.mUIPostcodeEdit.WindowTitles.Add("Customer_Details");
                    #endregion
                }
                return this.mUIPostcodeEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUINameEdit;
        
        private WpfEdit mUIAddressEdit;
        
        private WpfEdit mUIEmailEdit;
        
        private WpfEdit mUIPostcodeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPaymentWindow : WpfWindow
    {
        
        public UIPaymentWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Payment";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Payment");
            #endregion
        }
        
        #region Properties
        public WpfEdit UICardnumberEdit
        {
            get
            {
                if ((this.mUICardnumberEdit == null))
                {
                    this.mUICardnumberEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUICardnumberEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "cardnumber";
                    this.mUICardnumberEdit.WindowTitles.Add("Payment");
                    #endregion
                }
                return this.mUICardnumberEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUICardnumberEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "OK";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Button";
            this.WindowTitles.Add("OK");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("OK");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIReceiptWindow : WinWindow
    {
        
        public UIReceiptWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Receipt";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Receipt");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Receipt");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMainWindowWindow1 : WinWindow
    {
        
        public UIMainWindowWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "MainWindow";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
}
